// (c) mddbook, wasowski, tberger

lazy val root = (project in file(".")).settings (

  organization := "mdsebook",
  name := "mdsebook.fsm.scala",
  version := "0.03",
  // stick to Scala version supported by Scala IDE 
  scalaVersion := "2.11.8",
  retrieveManaged := true,
  EclipseKeys.relativizeLibs := true,

  scalacOptions += "-deprecation",
  scalacOptions += "-feature",
  scalacOptions += "-language:implicitConversions",

  // include to the code generated by Eclipse in a separate EMF project
  unmanagedSourceDirectories in Compile += file(baseDirectory.value.getParent) / "mdsebook.fsm/src/",
  unmanagedSourceDirectories in Compile += file(baseDirectory.value.getParent) / "mdsebook.petrinet/src/",
  // include the EMFScala "framework" (there is probably a better way to do it, to avoid rebuilding)
  unmanagedSourceDirectories in Compile += file(baseDirectory.value.getParent) / "mdsebook.scala/src/main/scala",
  // include the Code generated by Xtext
  unmanagedSourceDirectories in Compile += file(baseDirectory.value.getParent) / "mdsebook.fsm.xtext/xtend-gen/",
  unmanagedSourceDirectories in Compile += file(baseDirectory.value.getParent) / "mdsebook.fsm.xtext/src-gen/",
  unmanagedSourceDirectories in Compile += file(baseDirectory.value.getParent) / "mdsebook.fsm.xtext/src/",

  unmanagedClasspath in Runtime += file(baseDirectory.value.getParent) / "mdsebook.fsm.xtext/src-gen/",

  libraryDependencies += "org.eclipse.xtext" % "org.eclipse.xtext" % "2.10.0",
  libraryDependencies += "org.scalatest" %% "scalatest" % "2.2.6" % "test",
  libraryDependencies += "org.bitbucket.inkytonik.kiama" %% "kiama" % "2.0.0"
)
